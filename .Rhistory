shiny::runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
runApp('shiny-app')
library(dtw)
demo(dtw)
shiny::runApp('shiny-app')
setwd("/Users/nikhiltellakula_mac/Documents/Models/Causal Impact Product/")
data <- vroom::vroom("ci_data_in.csv")
View(data)
data_df <- data %>%
# filter(date >= start_match_period & date <= end_date)
pivot_longer(!date,
names_to = "time_series",
values_to = "value")
View(data_df)
data_df
data_df %>% arrange(time_series, date) %>% ungroup()
data_df2 <- data_df %>%
arrange(time_series, date) %>%
ungroup()
View(data_df2)
# parameter 1 - 1
warping_limit <- 1
row <- 1
View(data)
ThisMarket <- "JP_(Other)"
distances <- data.frame(matrix(nrow = length(data_df2$time_series) - 1, ncol = 10))
View(distances)
names(distances) <- c(id, "BestControl", "RelativeDistance", "Correlation",
"Length", "SUMTEST", "SUMCNTL", "RAWDIST",
"Correlation_of_logs", "populated")
distances[ ,"populated"] <- 0
View(distances)
names(distances) <- c("time_series", "BestControl", "RelativeDistance",
"Correlation", "Length", "SUMTEST", "SUMCNTL",
"RAWDIST", "Correlation_of_logs", "populated")
distances[ ,"populated"] <- 0
# within the loop
for (j in 1:length(unique(data_df2$time_series))) {
print(j)
}
unique(data$time_series)[j]
unique(data_df2$time_series)[j]
# parameter 2 - time_series
id <- "time_series"
distances[row, id] <- ThisMarket
distances[row, "BestControl"] <- ThatMarket
ThatMarket <- unique(data_df2$time_series)[j]
distances[row, "BestControl"] <- ThatMarket
# parameter 1 - data_df2
data <- data_df2
match_var <- "value"
d <- subset(data, !is.na(match_var))
match_var <- value
# parameter 2 - ThisMarket
test_market <- ThisMarket
test <- subset(d, id_var == test_market)[, c("date_var", "match_var")]
id_var = "time_series"
test <- subset(d, id_var == test_market)[, c("date_var", "match_var")]
test <- subset(d, id_var == test_market)[, c("date", "value")]
View(d)
View(test)
subset(d, id_var == test_market)
test <- subset(d, time_series == test_market)
